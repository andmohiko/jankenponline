rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // 送られてきたリクエストのデータ
    function requestData() {
      return request.resource.data;
    }

		// ログイン済かどうか
    function isSignedIn() {
      return request.auth.uid != null;
    }

    // ユーザーIDが一致するかどうか
    function isUser(userId) {
      return request.auth.uid == userId;
    }

    match /users/{userId} {
      allow read;
      allow create: if isSignedIn()
                    && isUser(userId)
                    && requestData().size() == 10
                    && 'createdAt' in requestData() && requestData().createdAt is timestamp
                    && 'profileImageUrl' in requestData() && requestData().profileImageUrl is string
                    && 'rating' in requestData() && requestData().rating is number
                    && 'status' in requestData() && requestData().status is string
                    && 'seasonWins' in requestData() && requestData().seasonWins is number
                    && 'seasonLoses' in requestData() && requestData().seasonLoses is number
                    && 'totalWins' in requestData() && requestData().totalWins is number
                    && 'totalLoses' in requestData() && requestData().totalLoses is number
                    && 'updatedAt' in requestData() && requestData().updatedAt is timestamp
                    && 'username' in requestData() && requestData().username is string;

      match /joinMatches/{joinMatchId} {
        allow read: if isSignedIn() && isUser(userId);
      }
    }

    match /matchRequests/{matchRequestId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn()
                    && isUser(userId)
                    && requestData().size() == 8
                    && 'createdAt' in requestData() && requestData().createdAt is timestamp
                    && 'matchingDeadline' in requestData() && requestData().matchingDeadline is timestamp
                    && 'profileImageUrl' in requestData() && requestData().profileImageUrl is string
                    && 'rating' in requestData() && requestData().rating is number
                    && 'status' in requestData() && requestData().status is string
                    && 'updatedAt' in requestData() && requestData().updatedAt is timestamp
                    && 'userId' in requestData() && requestData().userId is string
                    && 'username' in requestData() && requestData().username is string;
    }

    match /matches/{matchId} {
      allow read: if isSignedIn();

      match /actions/{actionId} {
        allow create: if isSignedIn()
                      && isUser(userId)
                      && requestData().size() == 3
                      && 'createdAt' in requestData() && requestData().createdAt is timestamp
                      && 'userAction' in requestData() && requestData().userAction is string
                      && 'userId' in requestData() && requestData().userId is string;
      }

      match /throws/{throwId} {
        allow create: if isSignedIn()
                      && isUser(userId)
                      && requestData().size() == 5
                      && 'createdAt' in requestData() && requestData().createdAt is timestamp
                      && 'hand' in requestData() && requestData().hand is string
                      && 'round' in requestData() && requestData().round is number
                      && 'turn' in requestData() && requestData().turn is number
                      && 'userId' in requestData() && requestData().userId is string;
      }
    }
  }
}
